{"version":3,"sources":["components/pageCarousel/PageCarousel.js","components/races/Races.js","components/spinner/Spinner.js","components/races/Race.js","components/spells/Spells.js","components/spells/Spell.js","components/monsters/Monsters.js","components/monsters/Monster.js","components/header/Header.js","components/footer/Footer.js","components/search/Search.js","components/search/SearchSpell.js","components/search/SearchMonster.js","components/card/card1.js","components/card/card2.js","components/card/card3.js","App.js","serviceWorker.js","index.js","images/critRole.jpg","images/spells.png","images/monster.jpeg","images/titleIcon.png","images/UserImage.png","images/dndHome.jpg","images/dndLink.jpg","images/abilities.png"],"names":["PageCarousel","showThumbs","infiniteLoop","autoPlay","style","styles","container","imgContainer","src","carousel1","alt","imgStyle","Button","className","typography","href","carousel2","carousel3","Component","marginTop","width","height","position","maxWidth","objectFit","textAlign","fontFamily","fontSize","Races","state","races","fetch","then","results","json","data","map","race","main","textDecoration","to","pathname","name","raceURL","url","key","anchor","setState","console","log","this","color","paddingLeft","display","justifyContent","backgroundColor","margin","padding","borderColor","borderStyle","boxShadow","useStyles","makeStyles","theme","root","marginLeft","spacing","CircularDeterminate","classes","React","useState","progress","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","CircularProgress","variant","value","Race","useLocation","setRace","alignment","age","size_description","language_desc","Spells","spells","spell","spellURL","Spell","setSpell","desc","Monsters","monsters","monster","monsterURL","Monster","setMonster","hit_points","size","armor_class","type","grow","flexGrow","menuButton","title","breakpoints","up","highlight","fade","palette","common","white","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","iconAnchorEl","setIconAnchorEl","isMenuOpen","Boolean","isIconMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","handleIconClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderIconMenu","renderMobileMenu","IconButton","aria-label","aria-controls","aria-haspopup","Avatar","UserImage","AppBar","background","Toolbar","edge","TitleIcon","marginRight","Typography","paddingTop","keyword","setKeyword","raceData","setRaceData","TextField","label","placeholder","fullWidth","onChange","e","target","InputLabelProps","toUpperCase","startsWith","flexWrap","textField","cssLabel","spellData","setSpellData","monsterData","setMonsterData","card","top","media","buttonLoc","MediaCard","Card","CardActionArea","CardMedia","backgroundPosition","image","tieflingImg","CardContent","gutterBottom","component","CardActions","App","backdrop","exact","path","Paper","mainSearch1","anchor3","Search","mainSearch2","SearchSpell","mainSearch3","SearchMonster","backgroundImage","BackgroundImg1","backgroundAttachment","BackgroundImg2","backgroundRepeat","BackgroundImg3","nav","marginBottom","ads","flexDirection","box","wordWrap","fontStyle","textShadow","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.770f0c9d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport carousel1 from \"../../images/dndHome.jpg\";\nimport carousel2 from \"../../images/dndLink.jpg\";\nimport carousel3 from \"../../images/critRole.jpg\";\nimport Button from \"@material-ui/core/Button\";\n\n// Carousel to flip through the highlighted front page\nclass PageCarousel extends Component {\n  render() {\n    return (\n      // Returns a carousel of three links and pictures\n      <Carousel\n        showThumbs={false}\n        infiniteLoop\n        autoPlay\n        style={styles.container}\n      >\n        {/* Carousel link 1 */}\n        <div style={styles.imgContainer}>\n          <img src={carousel1} alt=\"first slide\" style={styles.imgStyle} />\n          <Button\n            className=\"legend\"\n            style={styles.typography}\n            href=\"https://dnd.wizards.com/\"\n          >\n            Check out the Full DND 5th Edition\n          </Button>\n        </div>\n        {/* Carousel link 2 */}\n        <div style={styles.imgContainer}>\n          <img src={carousel2} alt=\"second slide\" style={styles.imgStyle} />\n          <Button\n            className=\"legend\"\n            style={styles.typography}\n            href=\"https://www.amazon.com/Dungeons-Dragons-Gaming-Books/b?ie=UTF8&node=16215\"\n          >\n            Order Books NOW!\n          </Button>\n        </div>\n        {/* Carousel link 3 */}\n        <div style={styles.imgContainer}>\n          <img src={carousel3} alt=\"thrid slide\" style={styles.imgStyle} />\n          <Button\n            className=\"legend\"\n            style={styles.typography}\n            href=\"https://critrole.com/\"\n          >\n            Check out Critical Role\n          </Button>\n        </div>\n      </Carousel>\n    );\n  }\n}\n\nexport default PageCarousel;\n\n// Styles used for this component\nconst styles = {\n  container: {\n    marginTop: \"5rem\"\n  },\n  imgContainer: {\n    width: \"100%\",\n    height: \"300px\",\n    position: \"relative\"\n  },\n  imgStyle: {\n    maxWidth: \"100%\",\n    height: \"auto\",\n    objectFit: \"cover\",\n    textAlign: \"center\",\n    position: \"relative\"\n  },\n  typography: {\n    fontFamily: \"Arial, Helvetica, sans-serif\",\n    fontSize: \"18px\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nclass Races extends Component {\n  constructor() {\n    super();\n    this.state = {\n      races: []\n    };\n  }\n\n  // Fetch function\n  componentDidMount() {\n    fetch(\"http://www.dnd5eapi.co/api/races/\")\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        let races = data.results.map(race => {\n          return (\n            <Button style={styles.main}>\n              {/* Navlink that will take the race picked to the Races specific page */}\n              <NavLink\n                style={{ textDecoration: \"none\", width: \"100%\" }}\n                to={{\n                  pathname: \"/Race/\" + race.name,\n                  state: {\n                    raceURL: race.url\n                  }\n                }}\n                key={race.name}\n              >\n                <p style={styles.anchor}>{race.name}</p>\n              </NavLink>\n            </Button>\n          );\n        });\n        this.setState({ races: races });\n\n        console.log(\"state\", this.state.races);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container2\">\n        <div className=\"container1\">{this.state.races}</div>\n      </div>\n    );\n  }\n}\n\nexport default Races;\n\nconst styles = {\n  anchor: {\n    fontSize: \"2em\",\n    color: \"black\",\n    textDecoration: \"none\",\n    paddingLeft: \"2em\"\n  },\n  main: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    backgroundColor: \"#F2F2F2\",\n    width: \"80%\",\n    margin: \"2em 8em 2em 8em\",\n    padding: \"0.5em\",\n    borderColor: \"grey\",\n    borderStyle: \"groove\",\n    boxShadow: \"10px 5px 5px grey\",\n    \"&:hover\": {\n      backgroundColor: \"blue\"\n    }\n  }\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n// Spinner function that will creata user feedback with a small loading animation\nexport default function CircularDeterminate() {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    function tick() {\n      // reset when reaching 100%\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    }\n\n    const timer = setInterval(tick, 20);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress variant=\"determinate\" value={progress} />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Spinner from \"../spinner/Spinner\";\n\n// Function that points to a specific section with the API\nfunction Race() {\n  const raceURL = useLocation().state.raceURL;\n  const [race, setRace] = useState(false);\n  const [url, setURL] = useState(raceURL);\n\n  // fetch data pull from a specifc request\n  useEffect(() => {\n    fetch(url)\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        setRace(data);\n      });\n  }, []);\n\n  // Return function that displays the specific API\n  return (\n    <>\n      {race && (\n        <div>\n          <h1>{race.name}</h1>\n          <p>\n            <b>Race Description: </b> {race.alignment}\n          </p>\n          <p>\n            <b>Age: </b> {race.age}\n          </p>\n          <p>\n            <b>Size: </b> {race.size_description}\n          </p>\n          <p>\n            <b>Language: </b> {race.language_desc}\n          </p>\n        </div>\n      )}\n\n      {!race && <Spinner />}\n    </>\n  );\n}\n\nexport default Race;\n\nconst styles = {};\n\n//constructor() {\n//super();\n//this.state = {\n//race: false,\n//url: this.props.url\n//}\n//}\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\n// Spells class\nclass Spells extends Component {\n  constructor() {\n    super();\n    this.state = {\n      spells: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://www.dnd5eapi.co/api/spells/\")\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        let spells = data.results.map(spell => {\n          return (\n            <Button style={styles.main}>\n              {/* Navlink that will take the spells picked to the Spells specific page */}\n              <NavLink\n                style={{ textDecoration: \"none\", width: \"100%\" }}\n                to={{\n                  pathname: \"/Spell/\" + spell.name,\n                  state: {\n                    spellURL: spell.url\n                  }\n                }}\n                key={spell.name}\n              >\n                <p style={styles.anchor}>{spell.name}</p>\n              </NavLink>\n            </Button>\n          );\n        });\n        this.setState({ spells: spells });\n        console.log(\"state\", this.state.spells);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container2\">\n        <div className=\"container1\">{this.state.spells}</div>\n      </div>\n    );\n  }\n}\n\nexport default Spells;\n\nconst styles = {\n  anchor: {\n    fontSize: \"2em\",\n    color: \"black\",\n    textDecoration: \"none\",\n    paddingLeft: \"2em\"\n  },\n  main: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    backgroundColor: \"#F2F2F2\",\n    width: \"80%\",\n    margin: \"2em 8em 2em 8em\",\n    padding: \"0.5em\",\n    borderColor: \"grey\",\n    borderStyle: \"groove\",\n    boxShadow: \"10px 5px 5px grey\"\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Spinner from \"../spinner/Spinner\";\n\n// Function that points to a specific section with the API\nfunction Spell() {\n  const spellURL = useLocation().state.spellURL;\n  const [spell, setSpell] = useState(false);\n  const [url, setURL] = useState(spellURL);\n\n  // fetch data pull from a specifc request\n  useEffect(() => {\n    fetch(url)\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        setSpell(data);\n      });\n  }, []);\n\n  // Return function that displays the specific API\n  return (\n    <>\n      {spell && (\n        <div>\n          <h1>{spell.name}</h1>\n          <p>\n            <b>Spell Description: </b> {spell.desc}\n          </p>\n        </div>\n      )}\n\n      {!spell && <Spinner />}\n    </>\n  );\n}\n\nexport default Spell;\n\nconst styles = {};\n\n//constructor() {\n//super();\n//this.state = {\n//race: false,\n//url: this.props.url\n//}\n//}\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nclass Monsters extends Component {\n  // Class constuctor for the creation of an array of objects pulled from an API\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n\n  // componentDidMount that fetches data from an API\n  componentDidMount() {\n    fetch(\"http://www.dnd5eapi.co/api/monsters/\")\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        let monsters = data.results.map(monster => {\n          return (\n            <Button style={styles.main}>\n              {/* Navlink that will take the monster picked to the Monster specific page */}\n              <NavLink\n                style={{ textDecoration: \"none\", width: \"100%\" }}\n                to={{\n                  pathname: \"/Monster/\" + monster.name,\n                  state: {\n                    monsterURL: monster.url\n                  }\n                }}\n                key={monster.name}\n              >\n                <p style={styles.anchor}>{monster.name}</p>\n              </NavLink>\n            </Button>\n          );\n        });\n        this.setState({ monsters: monsters });\n\n        console.log(\"state\", this.state.monsters);\n      });\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <div>{this.state.monsters}</div>\n      </div>\n    );\n  }\n}\n\nexport default Monsters;\n\nconst styles = {\n  anchor: {\n    fontSize: \"2em\",\n    color: \"black\",\n    textDecoration: \"none\",\n    paddingLeft: \"2em\"\n  },\n  main: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    backgroundColor: \"#F2F2F2\",\n    width: \"80%\",\n    margin: \"2em 8em 2em 8em\",\n    padding: \"0.5em\",\n    borderColor: \"grey\",\n    borderStyle: \"groove\",\n    boxShadow: \"10px 5px 5px grey\"\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Spinner from \"../spinner/Spinner\";\n\n// Function that points to a specific section with the API\nfunction Monster() {\n  const monsterURL = useLocation().state.monsterURL;\n  const [monster, setMonster] = useState(false);\n  const [url, setURL] = useState(monsterURL);\n\n  // fetch data pull from a specifc request\n  useEffect(() => {\n    fetch(url)\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        setMonster(data);\n      });\n  }, []);\n\n  // Return function that displays the specific API\n  return (\n    <>\n      {monster && (\n        <div>\n          <h1>{monster.name}</h1>\n          <p>\n            <b>Hit Points: </b> {monster.hit_points}\n          </p>\n          <p>\n            <b>Size: </b> {monster.size}\n          </p>\n          <p>\n            <b>Armour Class: </b> {monster.armor_class}\n          </p>\n          <p>\n            <b>Type of Monster: </b> {monster.type}\n          </p>\n          <p>\n            <b>Alignment: </b> {monster.alignment}\n          </p>\n        </div>\n      )}\n\n      {!monster && <Spinner />}\n    </>\n  );\n}\n\nexport default Monster;\n\nconst styles = {};\n\n//constructor() {\n//super();\n//this.state = {\n//race: false,\n//url: this.props.url\n//}\n//}\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Facebook from \"@material-ui/icons/Facebook\";\nimport Twitter from \"@material-ui/icons/Twitter\";\nimport Instagram from \"@material-ui/icons/Instagram\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { NavLink } from \"react-router-dom\";\nimport UserImage from \"../../images/UserImage.png\";\nimport TitleIcon from \"../../images/titleIcon.png\";\nimport { StylesContext } from \"@material-ui/styles\";\n\n// Styles that are used for the Header\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: theme.spacing(3)\n  },\n  title: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"xs\")]: {\n      display: \"block\"\n    }\n  },\n  highlight: {\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    }\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200\n    }\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  }\n}));\n\n// Plug in Header app bar from Material UI\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [iconAnchorEl, setIconAnchorEl] = React.useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n  const isIconMenuOpen = Boolean(iconAnchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  // Event handlers for sub menus that pull up depending on what you click\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleIconMenuOpen = event => {\n    setIconAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleIconClose = () => {\n    setIconAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <NavLink\n        to=\"/\"\n        style={{\n          textDecoration: \"none\",\n          color: \"black\"\n        }}\n      >\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      </NavLink>\n      <NavLink\n        to=\"/\"\n        style={{\n          textDecoration: \"none\",\n          color: \"black\"\n        }}\n      >\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      </NavLink>\n    </Menu>\n  );\n\n  const iconId = \"primary-search-icon-menu\";\n  const renderIconMenu = (\n    <Menu\n      anchorEl={iconAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={iconId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isIconMenuOpen}\n      onClose={handleIconClose}\n    >\n      <NavLink\n        to=\"/\"\n        style={{\n          textDecoration: \"none\",\n          color: \"black\"\n        }}\n      >\n        <MenuItem onClick={handleIconClose}>Home</MenuItem>\n      </NavLink>\n      <NavLink\n        to=\"/Races\"\n        style={{\n          textDecoration: \"none\",\n          color: \"black\"\n        }}\n      >\n        <MenuItem onClick={handleIconClose}>Races</MenuItem>\n      </NavLink>\n      <NavLink\n        to=\"/Spells\"\n        style={{\n          textDecoration: \"none\",\n          color: \"black\"\n        }}\n      >\n        <MenuItem onClick={handleIconClose}>Spells</MenuItem>\n      </NavLink>\n      <NavLink\n        to=\"/Monsters\"\n        style={{\n          textDecoration: \"none\",\n          color: \"black\"\n        }}\n      >\n        <MenuItem onClick={handleIconClose}>Monsters</MenuItem>\n      </NavLink>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"\" color=\"inherit\">\n          <Facebook />\n        </IconButton>\n        <p>Facebook</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"\" color=\"inherit\">\n          <Twitter />\n        </IconButton>\n        <p>Twitter</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"\" color=\"inherit\">\n          <Instagram />\n        </IconButton>\n        <p>Instagram</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <Avatar src={UserImage} />\n        </IconButton>\n        <NavLink to=\"\">\n          <p>Profile</p>\n        </NavLink>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar\n        position=\"fixed\"\n        style={{\n          background: \"black\"\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={(classes.menuButton, classes.highlight)}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            aria-haspopup=\"true\"\n            onClick={handleIconMenuOpen}\n            style={{ marginLeft: \"2em\" }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Avatar\n            src={TitleIcon}\n            style={{ marginLeft: \"1em\", marginRight: \"0.5em\" }}\n          />\n          <Typography\n            className={classes.title}\n            variant=\"h5\"\n            style={{ fontFamily: \"Marion, times, serif\", paddingTop: \"0.25em\" }}\n          >\n            D&D'Pedia\n          </Typography>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              aria-label=\"\"\n              color=\"inherit\"\n              className={classes.highlight}\n            >\n              <Facebook />\n            </IconButton>\n            <IconButton\n              aria-label=\"\"\n              color=\"inherit\"\n              className={classes.highlight}\n            >\n              <Twitter />\n            </IconButton>\n            <IconButton\n              aria-label=\"\"\n              color=\"inherit\"\n              className={classes.highlight}\n              style={{ marginRight: \"1em\" }}\n            >\n              <Instagram />\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <Avatar src={UserImage} style={{ marginRight: \"3em\" }} />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n              className={classes.highlight}\n              style={{ marginRight: \"1em\" }}\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n      {renderMobileMenu}\n      {renderMenu}\n      {renderIconMenu}\n    </div>\n  );\n}\n","import React from \"react\";\nimport TitleIcon from \"../../images/titleIcon.png\";\n\nconst Footer = () => {\n  // Quick compnent for creating the footer for the bottom of the page\n  return <footer style={styles.footer}>D&D'Pedia</footer>;\n};\nexport default Footer;\n\nconst styles = {\n  footer: {\n    position: \"fixed\",\n    bottom: \"0\",\n    width: \"100%\",\n    backgroundColor: \"#16A085\",\n    color: \"black\",\n    fontFamily: \"Times New Roman, Times, serif\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    padding: \"1rem\"\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useLocation } from \"react-router-dom\";\nimport Spinner from \"../spinner/Spinner\";\nimport { NavLink } from \"react-router-dom\";\n\n// function that will create a search mechanism the will go through all the spells depending\n// on what the user types\nfunction Race() {\n  const [keyword, setKeyword] = useState(\"\");\n  const [raceData, setRaceData] = useState([]);\n\n  // API pull that will have the data on hand when searching\n  useEffect(() => {\n    fetch(\"http://www.dnd5eapi.co/api/races/\")\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        setRaceData(data.results);\n      });\n  }, []);\n\n  // const that takes in the event\n  const handleChange = e => {\n    setKeyword(e.target.value);\n  };\n\n  console.log(raceData);\n\n  // the list that will be returned on what data was filtered\n  return (\n    <div>\n      {raceData && (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            margin: \"1em 1em 1em 2em\"\n          }}\n        >\n          <TextField\n            id=\"outlined-full-width\"\n            label=\"Search Races\"\n            style={{ margin: 8, width: \"80%\" }}\n            placeholder=\"Search...\"\n            fullWidth\n            margin=\"normal\"\n            value={keyword}\n            onChange={handleChange}\n            InputLabelProps={{}}\n            variant=\"outlined\"\n          />\n\n          <ul>\n            {keyword &&\n              raceData.map(race => {\n                return race.name\n                  .toUpperCase()\n                  .startsWith(keyword.toUpperCase()) ? (\n                  <li>\n                    <NavLink\n                      to={{\n                        pathname: \"/Race/\" + race.name,\n                        state: {\n                          raceURL: race.url\n                        }\n                      }}\n                      key={race.name}\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"#16A085\"\n                      }}\n                    >\n                      <p>{race.name}</p>\n                    </NavLink>\n                  </li>\n                ) : null;\n              })}\n          </ul>\n        </div>\n      )}\n\n      {!raceData && <Spinner />}\n    </div>\n  );\n}\n\nexport default Race;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  },\n  cssLabel: {\n    color: \"black\"\n  }\n}));\n\nconst styles = {\n  input: {\n    height: \"40px\",\n    width: \"100%\",\n    border: \"1px solid white\",\n    backgroundColor: \"rgba(0,0,0,.8)\",\n    color: \"white\",\n    marginTop: \"0.5em\",\n    fontSize: \"1.0em\"\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useLocation } from \"react-router-dom\";\nimport Spinner from \"../spinner/Spinner\";\nimport { NavLink } from \"react-router-dom\";\n\n// function that will create a search mechanism the will go through all the spells depending\n// on what the user types\nfunction Spell() {\n  const [keyword, setKeyword] = useState(\"\");\n  const [spellData, setSpellData] = useState([]);\n\n  // API pull that will have the data on hand when searching\n  useEffect(() => {\n    fetch(\"http://www.dnd5eapi.co/api/spells/\")\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        setSpellData(data.results);\n      });\n  }, []);\n\n  // const that takes in the event\n  const handleChange = e => {\n    setKeyword(e.target.value);\n  };\n\n  console.log(spellData);\n\n  // the list that will be returned on what data was filtered\n  return (\n    <div>\n      {spellData && (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            margin: \"1em 1em 1em 2em\"\n          }}\n        >\n          <TextField\n            id=\"outlined-full-width\"\n            label=\"Search Spells\"\n            style={{ margin: 8, width: \"80%\" }}\n            placeholder=\"Search...\"\n            fullWidth\n            margin=\"normal\"\n            value={keyword}\n            onChange={handleChange}\n            InputLabelProps={{}}\n            variant=\"outlined\"\n          />\n\n          <ul>\n            {keyword &&\n              spellData.map(spell => {\n                return spell.name\n                  .toUpperCase()\n                  .startsWith(keyword.toUpperCase()) ? (\n                  <li>\n                    <NavLink\n                      to={{\n                        pathname: \"/Spell/\" + spell.name,\n                        state: {\n                          spellURL: spell.url\n                        }\n                      }}\n                      key={spell.name}\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"#16A085\"\n                      }}\n                    >\n                      <p>{spell.name}</p>\n                    </NavLink>\n                  </li>\n                ) : null;\n              })}\n          </ul>\n        </div>\n      )}\n\n      {!spellData && <Spinner />}\n    </div>\n  );\n}\n\nexport default Spell;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  },\n  cssLabel: {\n    color: \"black\"\n  }\n}));\n\nconst styles = {\n  input: {\n    height: \"40px\",\n    width: \"100%\",\n    border: \"1px solid white\",\n    backgroundColor: \"rgba(0,0,0,.8)\",\n    color: \"white\",\n    marginTop: \"0.5em\",\n    fontSize: \"1.0em\"\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useLocation } from \"react-router-dom\";\nimport Spinner from \"../spinner/Spinner\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Monster() {\n  const [keyword, setKeyword] = useState(\"\");\n  const [monsterData, setMonsterData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://www.dnd5eapi.co/api/monsters/\")\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        setMonsterData(data.results);\n      });\n  }, []);\n\n  const handleChange = e => {\n    setKeyword(e.target.value);\n  };\n\n  console.log(monsterData);\n\n  return (\n    <div>\n      {monsterData && (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            margin: \"1em 1em 1em 2em\"\n          }}\n        >\n          <TextField\n            id=\"outlined-full-width\"\n            label=\"Search Monsters\"\n            style={{ margin: 8, width: \"80%\" }}\n            placeholder=\"Search...\"\n            fullWidth\n            margin=\"normal\"\n            value={keyword}\n            onChange={handleChange}\n            InputLabelProps={{}}\n            variant=\"outlined\"\n          />\n\n          <ul>\n            {keyword &&\n              monsterData.map(monster => {\n                return monster.name\n                  .toUpperCase()\n                  .startsWith(keyword.toUpperCase()) ? (\n                  <li>\n                    <NavLink\n                      to={{\n                        pathname: \"/Monster/\" + monster.name,\n                        state: {\n                          monsterURL: monster.url\n                        }\n                      }}\n                      key={monster.name}\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"#16A085\"\n                      }}\n                    >\n                      <p>{monster.name}</p>\n                    </NavLink>\n                  </li>\n                ) : null;\n              })}\n          </ul>\n        </div>\n      )}\n\n      {!monsterData && <Spinner />}\n    </div>\n  );\n}\n\nexport default Monster;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  },\n  cssLabel: {\n    color: \"black\"\n  }\n}));\n\nconst styles = {\n  input: {\n    height: \"40px\",\n    width: \"100%\",\n    border: \"1px solid white\",\n    backgroundColor: \"rgba(0,0,0,.8)\",\n    color: \"white\",\n    marginTop: \"0.5em\",\n    fontSize: \"1.0em\"\n  }\n};\n\n//constructor() {\n//super();\n//this.state = {\n//race: false,\n//url: this.props.url\n//}\n//}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport tieflingImg from \"../../images/abilities.png\";\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: \"auto\",\n    backgroundColor: \"white\",\n    margin: \"0 1em 1em 0.5em\",\n    position: \"relative\",\n    top: \"0px\"\n  },\n  media: {\n    height: 200,\n    padding: \"5em 1em 5em 1em\",\n    position: \"relative\",\n    top: \"0px\"\n  },\n  buttonLoc: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    marginRight: \"2em\"\n  }\n});\n\n// Material UI Card that will show a highlighted section of a SPA\nexport default function MediaCard() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea href=\"#/Races/\">\n        <CardMedia\n          className={classes.media}\n          style={{ backgroundPosition: \"center top\" }}\n          image={tieflingImg}\n          title=\"Races\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\n            Races\n          </Typography>\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n            See the playble races within Dungeons and Dragons 5th Edition\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions className={classes.buttonLoc}>\n        <Button size=\"large\" color=\"primary\" href=\"#/Races/\">\n          See All Races\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport tieflingImg from \"../../images/spells.png\";\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: \"auto\",\n    backgroundColor: \"white\",\n    margin: \"0 1em 1em 0.5em\",\n    position: \"relative\",\n    top: \"0px\"\n  },\n  media: {\n    height: 200,\n    padding: \"5em 1em 5em 1em\",\n    position: \"relative\",\n    top: \"0px\"\n  },\n  buttonLoc: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    marginRight: \"2em\"\n  }\n});\n\n// Material UI Card that will show a highlighted section of a SPA\nexport default function MediaCard() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea href=\"#/Spells/\">\n        <CardMedia\n          className={classes.media}\n          style={{ backgroundPosition: \"center top\" }}\n          image={tieflingImg}\n          title=\"Spells\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\n            Spells\n          </Typography>\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n            Search through all the spells that are within the realm of Dungeons\n            & Dragons 5th edition. Also create your own spells with our new\n            spell creation system.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions className={classes.buttonLoc}>\n        <Button size=\"large\" color=\"primary\" href=\"#/Spells/\">\n          See All Spells\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport tieflingImg from \"../../images/monster.jpeg\";\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: \"auto\",\n    backgroundColor: \"white\",\n    margin: \"0 1em 1em 0.5em\",\n    position: \"relative\",\n    top: \"0px\"\n  },\n  media: {\n    height: 200,\n    padding: \"5em 1em 5em 1em\",\n    position: \"relative\",\n    top: \"0px\"\n  },\n  buttonLoc: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    marginRight: \"2em\"\n  }\n});\n\n// Material UI Card that will show a highlighted section of a SPA\nexport default function MediaCard() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea href=\"/Monsters/\">\n        <CardMedia\n          className={classes.media}\n          style={{ backgroundPosition: \"center top\" }}\n          image={tieflingImg}\n          title=\"Monsters\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\n            Monsters\n          </Typography>\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n            Search through our monsters directory to get information on each\n            monster. (This is for the use of the Dungeon Master)\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions className={classes.buttonLoc}>\n        <Button size=\"large\" color=\"primary\" href=\"/Monsters/\">\n          See All Monsters\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","// Name: Nicholas Hubbard (Class: P&P V: 1219)\n\nimport React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  HashRouter\n} from \"react-router-dom\";\nimport PageCarousel from \"./components/pageCarousel/PageCarousel\";\nimport Races from \"./components/races/Races\";\nimport Race from \"./components/races/Race\";\nimport Spells from \"./components/spells/Spells\";\nimport Spell from \"./components/spells/Spell\";\nimport Monsters from \"./components/monsters/Monsters\";\nimport Monster from \"./components/monsters/Monster\";\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/Footer\";\nimport Search from \"./components/search/Search\";\nimport SearchSpell from \"./components/search/SearchSpell\";\nimport SearchMonster from \"./components/search/SearchMonster\";\nimport Paper from \"@material-ui/core/Paper\";\nimport BackgroundImg1 from \"./images/critRole.jpg\";\nimport BackgroundImg2 from \"./images/spells.png\";\nimport BackgroundImg3 from \"./images/monster.jpeg\";\nimport Card1 from \"./components/card/card1\";\nimport Card2 from \"./components/card/card2\";\nimport Card3 from \"./components/card/card3\";\n\nfunction App() {\n  return (\n    // App page that creates the router layout for each section clicked on\n    <HashRouter style={styles.backdrop}>\n      <Header />\n      <main>\n        {/* Switch plug in that lets the SPA switch between each page within the app */}\n        <Switch>\n          {/* Home Page */}\n          <Route exact path=\"/\">\n            <PageCarousel />\n\n            {/* used cards as the highlight navigation for the home page */}\n            <div style={{ margin: \"3em 2em 2em 2em\" }}>\n              <Card1 />\n            </div>\n            <div style={{ margin: \"2em 2em 2em 2em\" }}>\n              <Card2 />\n            </div>\n            <div style={{ margin: \"2em 2em 2em 2em\" }}>\n              <Card3 />\n            </div>\n          </Route>\n\n          {/* Races page */}\n          <Route path=\"/Races\">\n            <Paper style={styles.mainSearch1}>\n              <h1 style={styles.anchor3}>Dungeons and Dragons Races</h1>\n            </Paper>\n            <Search />\n            <Races />\n          </Route>\n\n          {/* Race specific page */}\n          <Route path=\"/Race\">\n            <Paper style={styles.main}>\n              <Race />\n            </Paper>\n          </Route>\n\n          {/* Spells Page */}\n          <Route path=\"/Spells\">\n            <Paper style={styles.mainSearch2}>\n              <h1 style={styles.anchor3}>Dungeons and Dragons Spells</h1>\n            </Paper>\n            <SearchSpell />\n            <Spells />\n          </Route>\n\n          {/* Spell specific page */}\n          <Route path=\"/Spell\">\n            <Paper style={styles.main}>\n              <Spell />\n            </Paper>\n          </Route>\n\n          {/* Monsters Page */}\n          <Route path=\"/Monsters\">\n            <Paper style={styles.mainSearch3}>\n              <h1 style={styles.anchor3}>Dungeons and Dragons Monsters</h1>\n            </Paper>\n            <SearchMonster />\n            <Monsters />\n          </Route>\n\n          {/* Monster specific page */}\n          <Route path=\"/Monster\">\n            <Paper style={styles.main}>\n              <Monster />\n            </Paper>\n          </Route>\n        </Switch>\n      </main>\n      {/*<Footer />*/}\n    </HashRouter>\n  );\n}\n\nexport default App;\n\nconst styles = {\n  backdrop: {\n    backgroundColor: \"#f6f6f6\"\n  },\n\n  main: {\n    backgroundColor: \"#F2F2F2\",\n    margin: \"2em 8em 2em 8em\",\n    padding: \"2em\",\n    boxShadow: \"10px 5px 5px grey\"\n  },\n\n  mainSearch1: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"0\",\n    padding: \"4em\",\n    background: \"linear-gradiant(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))\",\n    backgroundImage: `url(${BackgroundImg1})`,\n    backgroundColor: \"black\",\n    backgroundAttachment: \"fixed\",\n    backgroundPosition: \"center top\"\n  },\n\n  mainSearch2: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"0\",\n    padding: \"4em\",\n    background: \"linear-gradiant(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))\",\n    backgroundImage: `url(${BackgroundImg2})`,\n    backgroundColor: \"black\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundAttachment: \"fixed\",\n    backgroundPosition: \"center top\"\n  },\n\n  mainSearch3: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"0\",\n    padding: \"4em\",\n    background: \"linear-gradiant(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))\",\n    backgroundImage: `url(${BackgroundImg3})`,\n    backgroundColor: \"black\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundAttachment: \"fixed\",\n    backgroundPosition: \"center top\"\n  },\n\n  nav: {\n    color: \"black\",\n    width: \"100%\",\n    marginLeft: \"2%\",\n    marginBottom: \"2%\"\n  },\n\n  ads: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n\n  box: {\n    backgroundColor: \"grey\",\n    margin: \"0 1em 1em 0.5em\",\n    wordWrap: \"break-word\",\n    padding: \"5em 1em 5em 1em\"\n  },\n  anchor3: {\n    fontSize: \"2.5em\",\n    color: \"white\",\n    fontStyle: \"bold\",\n    paddingLeft: \"2em\",\n    textShadow: \"1px 1px 2px black\"\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/critRole.1f5cd1e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spells.b0ef4b28.png\";","module.exports = __webpack_public_path__ + \"static/media/monster.85adf435.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/titleIcon.a90e47c0.png\";","module.exports = __webpack_public_path__ + \"static/media/UserImage.22e9aec0.png\";","module.exports = __webpack_public_path__ + \"static/media/dndHome.a1806c0e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dndLink.eae36963.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abilities.65424e39.png\";"],"sourceRoot":""}